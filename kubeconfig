kubectl config view

kubectl config --kubeconfig=/root/my-kube-config use-context research

kubectl config --kubeconfig /root/my-kube-config current-context


To delete a user you can run kubectl --kubeconfig=config-demo config unset users.<name>
To remove a cluster, you can run kubectl --kubeconfig=config-demo config unset clusters.<name>
To remove a context, you can run kubectl --kubeconfig=config-demo config unset contexts.<name>
###########################################################################################################################################
Generate certificate for user, and give access to the user using roles and rolebindings and access the kubernetes cluster with that user
#############################################################################################################################################
openssl genrsa -out khwahish.key 2048
openssl req -new -key khwahish.key -out khwahish.csr -subj "/CN=khwahish"

---
apiVersion: certificates.k8s.io/v1
kind: CertificateSigningRequest
metadata:
  name: khwahish
spec:
  request: 
  signerName: kubernetes.io/kube-apiserver-client
  expirationSeconds: 86400  # one day
  usages:
  - client auth



kubectl create role developer --verb=create --verb=get --verb=list --verb=update --verb=delete --resource=pods
kubectl create rolebinding developer-binding-khwahish --role=developer --user=khwahish


kubectl get csr khwahish -o jsonpath='{.status.certificate}'| base64 -d > khwahish.crt
k certificate approve csr/khwahish
kubectl config set-credentials khwahish --client-key=khwahish.key --client-certificate=khwahish.crt --embed-certs=true  # users: created in kubeconfig


kubectl config set-context khwahish --cluster=kubernetes --user=khwahish  # create context

kubectl config use-context khwahish



kubectl config --kubeconfig khwahish.cfg set-cluster production --server https://controlplane:6443 --certificate-authority /etc/kubernetes/pki/ca.crt --embed-certs=true

k config set-credentials khwahish --client-certificate /root/user/khwahish.crt --client-key /root/user/khwahish.key --kubeconfig khwahish.cfg --embed-certs=true

k config set-context khwahish@production --cluster production --user khwahish --namespace default  --kubeconfig khwahish.cfg



kubectl create role developer --verb=list,create,delete,get --resource=persistentvolumeclaims,persistentvolumes,pods --namespace default

k create rolebinding developer-rb --role developer --user khwahish

k get pods --kubeconfig khwahish.cfg
